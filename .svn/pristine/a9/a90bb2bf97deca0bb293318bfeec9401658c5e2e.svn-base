\chapter{Installation}

The Downloads page of the Unicon web site (http://unicon.org) has
links to the binary distributions of Unicon and to the source code.
Unicon may be installed from a binary distribution for Intel based
Windows and MacOS platforms. Users on other platforms will usually have
to download the source code and build it themselves.  This will
generally require a supported C compiler and environment, such as a
make program compatible with GNU make.

Unicon's source code can generally be downloaded as a compressed
archive file with the extension .zip, or from a revision control
system. The revision control system sources are more up to date.

\section{Building on Linux}


Your Linux software repository will probably have a revision control
system client package as an easy install if you do not have it
already.

\section{Building on OS X}

You may need to download the Xcode development package from
http://developer.apple.com/xcode/download 
to obtain a C compiler.  If you want access to the graphics
facilities of Unicon, you also need to download and install the
XQuartz package from http://xquartz.macosforge.org.

Once the pre-requisites are in place, and any configuration has been
done, Unicon may be built by following the instructions in the top
level README file.

\section{Building on Windows}

If the prebuilt binary package is not suitable (for example, a feature
you need is not enabled) then Unicon can be built from scratch. You
will need a C compiler. The MingGW64 distribution of gcc is the usual
choice, although other C compilers may be supported
on Windows. The standard Unicon build scripts will not
work from the command prompt, so you will also need to install a
``unix-like'' set of command line commands: either msys or cygwin 
have been used in the past. The Unicon web site has a link
(http://www2.cs.uidaho.edu/~jeffery/win32) to some other utilities
that you may need.

Once the pre-requisites are in place, and any configuration has been
done, Unicon may be built by following the instructions in the top
level README file.
