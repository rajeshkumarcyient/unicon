global mutx
global que

procedure main(args)
   if not (&features == "concurrent threads") then
      stop("This program requires concurrent threads.")

   que := []
   i:=0
   mutx := mutex()

   write("Running two producers and one consumer...")

   p := thread produceodd()
   c := thread produceeven()
   
   while i<1000 do{
     critical mutx:
        if *que>0 then{
           x:= pop(que)
           if *args>0 then writes(x, "  ")
           i+:=1
           }
     }
    
   write("\nTotal=", i)
    
   wait(p)
   wait(c)
end


procedure produceodd()
   every i:=1 to 1000 by 2 do
      critical mutx: put(que, i)

end


procedure produceeven()
   every i:=2 to 1000 by 2 do
      critical mutx: put(que, i)
end
