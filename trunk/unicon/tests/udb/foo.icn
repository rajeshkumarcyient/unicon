package foo

global foo, f, Foo, blah

class Foo(a,b,c,d,e,f)
   method f1()
      static i
      local x
      write(image(a))
      c := 10
   end
   method f2()
      static i := 1
      local x := 2
      write(image(b))
   end
initially
   self.a := 1
   self.b := "one"
   self.c := &null
end

procedure main()
#   Foo := "hello"
   write("f: ",image(f))
   write("Foo: ",image(Foo))
   write("foo: ",image(foo))
   X := Foo()
   #every x := !X do write(image(x))
   f(1,"one",X)
   flist(1,"one",X)

end

procedure f(a,b,c)
   write("f: ",image(f))
   write("Foo: ",image(Foo))
   write("foo: ",image(foo))
   write("blah: ",image(blah))
   
   if \a then write(image(a))
   if \b then write(image(b))
   if \c then write(image(c))
end

procedure flist(arg[])
   local x
   every x := !arg do write(image(x))
end

