import scopepkg

global a, b, c 

# can a class and package share a name? e.g. foo
#class foo(a,b,c,d,e,f)
class Test(a,b,c)
   method f1()
      static i := 0
      local a,b,c
      i +:= 1
      a := 2*self.a
      b := 2*a
      c := 2*b
      write(i)
      write("Test::f1(): a: ",a)
      write("Test::f1(): b: ",b)
      write("Test::f1(): c: ",c)
      return [a,b,c]
   end
initially
   self.a := \a | 1
   self.b := \b | "one"
   self.c := \c | &null
end

procedure main()
   local X, Y
   X := Test(1,2,3)
   Y := scopepkg::Test(10,11,12)
   tmp := X.f1()
   a := tmp[1]
   b := tmp[2]
   c := tmp[3]
   printvar(a,b,c)
   tmp := Y.f1()
   a := tmp[1]
   b := tmp[2]
   c := tmp[3]
   printvar(a,b,c)
   f1()
   scopepkg::f1()
end

procedure f1()
   local a,b,c
   local msg := "I am procedure f1"
   a := *msg
   b := a/2
   c := a+b
   write("f1(): a: ",a)
   write("f1(): b: ",b)
   write("f1(): c: ",c)
end

procedure printvar(a,b,c)
   write("main(): a: ",a)
   write("main(): b: ",b)
   write("main(): c: ",c)
end

