#SHELL=/bin/bash

# Do the tests
DoTest: clean TestHdr $(TARGETS)
	@make -s Summary

%.u: %.icn
	@$(UC) $(UFLAGS) $<

# For a test that does not have a data file
# or standard output file, the following two
# rule makes sure there are empty ones

%.std:
	-@touch stand/$@

local:
	-mkdir local

#skip rule: don't do these tests
$(SKIP):
	-@echo "[Testing $@]... Skip"

$(IGNORE):
	-@$E -n "[Testing $@]... "
	@$(UC) $(UFLAGS) $@
	-@./$@ < data/$@.dat  > local/$@.out 2>&1 || true
	-@echo "Expect/ignore these differences in $@:"
	-@diff stand/$@.std local/$@.out; \
	if [ $$? -eq 0 ] ; then echo "OK"; \
	else echo "Ignored"; fi || true
	-@rm $@$(EXE)

# special skip rules for different platforms
ifeq ($(TOS),Windows)
#skip on Windows
$(WINSKIP):
	-@echo "[Testing $@]... Skip on Windows"
else
ifeq ($(TOS),Darwin)
#skip on Mac OS
$(MACOSSKIP):
	-@echo "[Testing $@]... Skip on Mac OS"
else
$(LINUXSKIP):

endif
endif

# Compile and test, generate a short diff file if there are differences
%: %.icn local %.std
	-@$E -n "[Testing $@]... "
	@$(UC) $(UFLAGS) $<
	@if [ -f data/$@.dat ] ; then \
	./$@ < data/$@.dat  > local/$@.out 2>&1; \
	else ./$@ > local/$@.out 2>&1; fi || true
	-@diff -wq stand/$@.std local/$@.out >/dev/null; \
	if [ $$? -eq 0 ] ; then echo "OK"; \
	else echo "Failed"; diff -wy stand/$@.std local/$@.out > $@.diff; fi || true
	-@rm $@$(EXE)

FILES=$(patsubst %.diff,%.report,$(wildcard *.diff))
ICNFILES=$(patsubst %.diff,%.icn,$(wildcard *.diff))

%.report: %.diff %.icn
	@echo "++++++++++++++++++++++++++++"
	@echo " *** Test: $(filter-out $<,$^) ***"
	@echo 
	@echo "----- Expected Output ---------------------------------------- Actual Output -----"
	@cat $<
	@echo

TestHdr:
	@echo
	@echo "========================="
	@echo "   $(TESTNAME) Test Suite"
	@echo "========================="	
	@echo

Summary:
	@echo
	@echo "========================"
	@echo " Test  : $(TESTNAME)"
	@if [ -n "$(ICNFILES)" ]; then echo " Failed: $(ICNFILES)"; \
	else echo " Status: All Good"; fi
	@echo "========================"
	@echo

Report: Summary $(FILES)

all: Test Report

.PHONY:  clean Clean Test Test-icon Test-icont Test-iconc Samples $(TESTS)

# Delete the default suffixes to avoid implict rules
.SUFFIXES:

#silent clean
clean:
	-@rm -f *.u uniclass.* $(TARGETS)
	-@rm -f local/*.out *.diff
	-@touch local/.placeholder

#verbose clean
Clean:
	-rm -f *.u uniclass.* $(TARGETS)
	-rm -f local/*.out *.diff *.exe
	-touch local/.placeholder

disclean:
	-@rm -f *.u uniclass.* $(TARGETS)
	-@rm -f local/*.out *.diff *.exe




